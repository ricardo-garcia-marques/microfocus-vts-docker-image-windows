var fs=require("fs"),path=require("path"),http=require("http"),util=require("util"),log=require("./log"),connect=require("connect"),api=require("./api"),admin=require("./admin"),common=require("./admin/common"),instMgr=require("./admin/instmgr"),enumMode=common.enumMode,cmdParser=new common.CommandParser,Util=common.Util,InstanceManager=require("./admin/instmgr").InstanceManager,ntlm=require("express-ntlm");logger=null;
function uncaughtExceptionHandler(a){null==logger&&(logger=log.Logger.getDefaultInstance());logger.error("Uncaught exception:"+a.stack)}
function initServer(a){if(a&&a.mode===enumMode.NamedInstance){var b=api.getHttpServer();api.initApiService(a,function(c){Util.empty(c)||(logger.error(c),process.exit(0));c=connect();c.use(connect.logger("dev"));configure.admin.useSSL&&configure.admin.requestClientCert&&c.use(function(a,b,c){if(a.client.authorized)return c();logger.error("no valid certificate for server verification");b.end("no valid client certificate!")});"NTLM"==configure.admin.authentication&&c.use(ntlm({domain:configure.admin.domain,
domaincontroller:configure.admin.domaincontroller}));var d=admin.createInstance(a);d.initChain1(c);configure.admin.requireBasicAuthForAPI?(d.initChain2(c),b.initChain(c)):(b.initChain(c),d.initChain2(c));d.createHttpServer();d.start();logger.sendToParent("success");logger.info("VTS Server listening on port %d",a.port)})}else b=api.getHttpServer(),b.initServer(a,function(){admin.startServer(a);logger.sendToParent("success");logger.info("VTS Admin Server listening on port %d",a.port)});logger.info("Running mode: "+
a.mode)}function initOptions(a){var b={};try{b=cmdParser.parse(a)}catch(c){logger.error(c)}options=common.extend({collectionInfo:configure.colInfoTable,dbName:b.name||configure.defaultDbName},configure);options.name=Util.empty(b.name)?"":b.name;b.port?(options.mode=enumMode.NamedInstance,options.port=b.port):(options.mode=enumMode.Default,options.port=configure.adminPort);options.from=b.from;return options}process.on("uncaughtException",uncaughtExceptionHandler);var thisInstance=new instMgr.ChildInstance(process);
thisInstance.enableAccess(function(a){var b=api.getHttpServer();!0===a?b.enableAccess(!0):!1===a&&b.enableAccess(!1)});common.initConfigure();void 0!=configure.foreverRun&&!1==configure.foreverRun&&process.removeListener("uncaughtException",uncaughtExceptionHandler);var options=initOptions(process.argv),logOptions=configure.logger;options.name&&(logOptions.name=options.name);logger=log.Logger.initDefaultInstance(logOptions);var instOptions={port:options.port,name:options.name,mode:options.mode,from:options.from};
InstanceManager.initInstance(instOptions);initServer(options);
