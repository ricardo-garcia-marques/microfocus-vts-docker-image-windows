var fs=require("fs"),path=require("path"),http=require("http"),util=require("util"),log=require("./log"),connect=require("connect"),admin=require("./admin"),common=require("./admin/common"),instMgr=require("./admin/instmgr"),exec=require("child_process").execFile,enumMode=common.enumMode,cmdParser=new common.CommandParser,Util=common.Util,InstanceManager=require("./admin/instmgr").InstanceManager,ntlm=require("express-ntlm"),apiServer="./daemon";logger=null;
function uncaughtExceptionHandler(a){null==logger&&(logger=log.Logger.getDefaultInstance());logger.error("Uncaught exception:"+a.stack)}function initServer(a){a&&a.mode===enumMode.NamedInstance?exec(apiServer,[a.port,a.dbName],function(){logger.info("api server started")}):(admin.startServer(a),logger.sendToParent("success"),logger.info("VTS Admin Server listening on port %d",a.port));logger.info("Running mode: "+a.mode)}
function initOptions(a){var b={};try{b=cmdParser.parse(a)}catch(c){logger.error(c)}options=common.extend({collectionInfo:configure.colInfoTable,dbName:b.name||configure.defaultDbName},configure);options.name=Util.empty(b.name)?"":b.name;b.port?(options.mode=enumMode.NamedInstance,options.port=b.port):(options.mode=enumMode.Default,options.port=configure.adminPort);options.from=b.from;return options}process.on("uncaughtException",uncaughtExceptionHandler);var thisInstance=new instMgr.ChildInstance(process);
thisInstance.enableAccess(function(){});common.initConfigure();void 0!=configure.foreverRun&&!1==configure.foreverRun&&process.removeListener("uncaughtException",uncaughtExceptionHandler);var options=initOptions(process.argv),logOptions=configure.logger;options.name&&(logOptions.name=options.name);logger=log.Logger.initDefaultInstance(logOptions);var instOptions={port:options.port,name:options.name,mode:options.mode,from:options.from};InstanceManager.initInstance(instOptions);initServer(options);
