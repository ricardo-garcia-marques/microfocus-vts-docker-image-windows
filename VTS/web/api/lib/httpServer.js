var common=require("../../admin/common"),fs=require("fs"),https=require("https"),connect=require("connect"),http=require("http"),ntlm=require("express-ntlm"),apiService=require("./apiServer"),HttpHandler=require("./httpHandler").HttpHandler,users=null;function route(b,d,a){return function(c,e,f){return c.url.match(b)&&c.method==d?a(c,e):f()}}
function auth(b,d,a){var c=a.connection.address();if(c&&"127.0.0.1"===c.address)for(var e in a.headers)if(/^user-agent$/i.test(e)&&"VTSCMD"===a.headers[e])return!0;if(null==users)for(i in users={},a=configure.admin.users,a)users[a[i].user.toLowerCase()]=a[i].password;b=b.toLowerCase();return d==users[b]}function ApiHttpServer(){}ApiHttpServer.instance=new ApiHttpServer;
ApiHttpServer.prototype.initServer=function(b,d){apiService.createInstance(b);var a=connect();"Basic"==configure.admin.authentication&&configure.admin.requireBasicAuthForAPI&&a.use(function(a,b,c){connect.basicAuth(function(b,c){return auth(b,c,a)})(a,b,c)});configure.admin.useSSL&&configure.admin.requestClientCert&&a.use(function(a,b,c){if(a.client.authorized)return c();logger.error("no valid certificate for server verification");b.statusCode=495;b.end("no valid client certificate!")});"NTLM"==configure.admin.authentication&&
a.use(ntlm({domain:configure.admin.domain,domaincontroller:configure.admin.domaincontroller}));a.use(connect.bodyParser());a.use(route(/^\/api([\/\?#]|$)/,"POST",this.getHandler().handle()));a.use(function(b,a){a.end("Hello from Connect!\n")});if(!0==configure.admin.useSSL){var c={key:fs.readFileSync(configure.admin.privateKey),cert:fs.readFileSync(configure.admin.certificate),secureProtocol:{auto:"SSLv23_method","tls1.0":"TLSv1_method","tls1.1":"TLSv1_1_method","tls1.2":"TLSv1_2_method"}[configure.admin.tlsVersion],
ciphers:configure.admin.ciphers,passphrase:configure.admin.passphrase};configure.admin.requestClientCert&&(c.requestCert=!0,c.rejectUnauthorized=!1,c.ca=[fs.readFileSync(configure.admin.ca)]);this.server=https.createServer(c,a)}else this.server=http.createServer(a);apiService.callAfterReady(function(){d(this.server)});return this.server};ApiHttpServer.prototype.stop=function(){try{this.server.close()}catch(b){logger.error(b)}this.started=!1;this.getHandler().enableAccess(this.started)};
ApiHttpServer.prototype.start=function(b){this.port=b;var d=this.server;d.on("connection",function(a){a.setNoDelay(!0)});d.listen(b);d.address()?(this.started=!0,logger.info("VTS API Server listening on port %d",d.address().port)):(this.started=!1,logger.warning("Cannot listen on port %d",b));this.getHandler().enableAccess(this.started)};ApiHttpServer.prototype.getHandler=function(){null==this.handler&&(this.handler=new HttpHandler);return this.handler};
ApiHttpServer.prototype.initChain=function(b){b.use(route(/^\/api([\/\?#]|$)/,"POST",this.getHandler().handle()))};ApiHttpServer.prototype.enableAccess=function(b){this.getHandler().enableAccess(b);this.started=b};exports.getInstance=function(){return ApiHttpServer.instance};
